mal olor: switch statement

código donde se presenta:
    dentro del GestorNumerosDisponibles:

    	public String obtenerNumeroLibre() {
		String linea;
		switch (tipoGenerador) {
			case "ultimo":
				linea = lineas.last();
				lineas.remove(linea);
				return linea;
			case "primero":
				linea = lineas.first();
				lineas.remove(linea);
				return linea;
			case "random":
				linea = new ArrayList<String>(lineas)
						.get(new Random().nextInt(lineas.size()));
				lineas.remove(linea);
				return linea;
		}
		return null;
	}

refactoring: replace conditional with strategy

código final:

    dentro del GestorNumerosDisponibles:
        public String obtenerNumeroLibre() {
            return this.tipoGenerador.obtenerNumeroLibre(this.lineas);
        }

    modificamos mensajes en el test:
        @Test
        void obtenerNumeroLibre() {
            // por defecto es el ultimo
            assertEquals("2214444559", this.sistema.obtenerNumeroLibre());

            this.sistema.getGestorNumeros().cambiarTipoGenerador(new StrategyPrimero());
            assertEquals("2214444554", this.sistema.obtenerNumeroLibre());

            this.sistema.getGestorNumeros().cambiarTipoGenerador(new StrategyRandom());
            assertNotNull(this.sistema.obtenerNumeroLibre());
        }

    agregamos nuevas clases:

        public interface GestorStrategy {
            public String obtenerNumeroLibre(SortedSet<String> lineas);
        }

        public class StrategyUltimo implements GestorStrategy{
            public String obtenerNumeroLibre(SortedSet<String> lineas) {
                String linea;
                linea = lineas.last();
                lineas.remove(linea);
                return linea;
            }
        }

        public class StrategyPrimero implements GestorStrategy{
            public String obtenerNumeroLibre(SortedSet<String> lineas) {
                String linea;
                linea = lineas.first();
                lineas.remove(linea);
                return linea;
            }
        }
        
        public class StrategyRandom implements GestorStrategy{
            public String obtenerNumeroLibre(SortedSet<String> lineas) {
                String linea;
                linea = new ArrayList<String>(lineas)
                        .get(new Random().nextInt(lineas.size()));
                lineas.remove(linea);
                return linea;
            }
        }