mal olor: inicialización en varios pasos

código donde se presenta:
    dentro de la clase Empresa:
        public Llamada registrarLlamada(Cliente origen, Cliente destino, Llamada llamada, int duracion) {
            llamada.setOrigen(origen.getNumeroTelefono());
            llamada.setDestino(destino.getNumeroTelefono());
            llamada.setDuracion(duracion);
            llamadas.add(llamada);
            origen.getLlamadas().add(llamada);
            return llamada;
        }

refactoring: crear constructores

código resultante:

    dentro de la clase Llamada:
        public Llamada(String origen, String destino, int duracion) {
            this.origen = origen;
            this.destino = destino;
            this.duracion = duracion;
        }

    dentro de la clase LlamadaInternacional:
        public LlamadaInternacional(String origen, String destino, int duracion) {
            super(origen, destino, duracion);
        }

    dentro de la clase LlamadaNacional:
        public LlamadaNacional(String origen, String destino, int duracion) {
            super(origen, destino, duracion);
        }
    
    dentro de la clase Empresa:
        public Llamada registrarLlamadaNacional(Cliente origen, Cliente destino, int duracion) {
            Llamada llamada = new LlamadaNacional(origen.getNumeroTelefono(), destino.getNumeroTelefono(), duracion);
            origen.agregarLlamada(llamada);
            return llamada;
        }

        public Llamada registrarLlamadaInternacional(Cliente origen, Cliente destino, int duracion) {
            Llamada llamada = new LlamadaInternacional(origen.getNumeroTelefono(), destino.getNumeroTelefono(), duracion);
            origen.agregarLlamada(llamada);
            return llamada;
        }

    dentro del test:
        dentro de testcalcularMontoTotalLlamadas:
            this.sistema.registrarLlamadaNacional(emisorPersonaJuridica, remitentePersonaFisica, 10);
            this.sistema.registrarLlamadaInternacional(emisorPersonaJuridica, remitentePersonaFisica, 8);
            this.sistema.registrarLlamadaNacional(emisorPersonaJuridica, remitentePersonaJuridica, 5);
            this.sistema.registrarLlamadaInternacional(emisorPersonaJuridica, remitentePersonaJuridica, 7);
            this.sistema.registrarLlamadaNacional(emisorPersonaFisca, remitentePersonaFisica, 15);
            this.sistema.registrarLlamadaInternacional(emisorPersonaFisca, remitentePersonaFisica, 45);
            this.sistema.registrarLlamadaNacional(emisorPersonaFisca, remitentePersonaJuridica, 13);
            this.sistema.registrarLlamadaInternacional(emisorPersonaFisca, remitentePersonaJuridica, 17);