mal olor: método largo

código donde se presenta:
        dentro del GestorNumerosDisponibles:
            public String obtenerNumeroLibre() {
                String linea;
                switch (tipoGenerador) {
                    case "ultimo":
                        linea = lineas.last();
                        lineas.remove(linea);
                        return linea;
                    case "primero":
                        linea = lineas.first();
                        lineas.remove(linea);
                        return linea;
                    case "random":
                        linea = new ArrayList<String>(lineas)
                                .get(new Random().nextInt(lineas.size()));
                        lineas.remove(linea);
                        return linea;
                }
                return null;
            }


refactoring: extract method

código resultante:
    dentro de la clase GestorNumerosDisponibles:
        private GestorStrategy tipoGenerador;
        
        public String obtenerNumeroLibre() {
            String linea;
            switch (tipoGenerador) {
                case "ultimo":
                    return this.ultimaLinea();
                case "primero":
                    return this.primerLinea();
                case "random":
                    return this.lineaRandom();
            }
            return null;
        }

        public String ultimaLinea(){
            linea = lineas.last();
            lineas.remove(linea);
            return linea;
        }

        public String primerLinea(){
            linea = lineas.first();
            lineas.remove(linea);
            return linea;
        }

        public String lineaRandom(){
            linea = new ArrayList<String>(lineas)
                    .get(new Random().nextInt(lineas.size()));
            lineas.remove(linea);
            return linea;
        }